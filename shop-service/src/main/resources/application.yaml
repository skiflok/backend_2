spring:
  application:
    name: shop-service

  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      enable-auto-commit: true
      auto-commit-interval: 1000  # интервал в мс для авто-коммита
      auto-offset-reset: latest  # при наличии сохранённых оффсетов читать с последнего
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  datasource:
    #    url: jdbc:postgresql://postgres:5432/backend2
    url: jdbc:postgresql://localhost:5432/backend2
    username: admin
    password: pass
    hikari:
      read-only: ${DB_READ_ONLY:false}

  redis:
    host: redis
    port: 6379

  #  datasource:
  #    url: jdbc:h2:mem:backend2
  #    username: sa
  #    password: password
  #    driverClassName: org.h2.Driver

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
    #        dialect: org.hibernate.dialect.PostgreSQLDialect

    #    for H2
  #    database-platform: org.hibernate.dialect.H2Dialect
  #    defer-datasource-initialization: true

  #  h2:
  #    console:
  #      enabled: true


  liquibase:
    enabled: true
    show-summary-output: console

  output:
    ansi:
      enabled: always

  servlet:
    multipart:
      max-file-size: 2MB


server:
  port: 9999
  forward-headers-strategy: framework

logging:
  level:
    liquibase: info
    com.edu.shopservice: debug
    org.springframework.web.filter.CommonsRequestLoggingFilter: debug

springdoc:
  api-docs:
    path: /docs
  swagger-ui:
    disable-swagger-default-url: true
    #    url: /swagger
    path: /swagger/index.html
#    show-common-extensions: true

grpc:
  client:
    authGrpcClient:
      address: ${GRPC_CLIENT_AUTHGRPCCLIENT_ADDRESS:localhost:9090}
      negotiationType: plaintext

kafka:
  in:
    product:
      updates-stocks:
        topic: product-stock-update-event-request
        group-id: product-stock-update-event-request-shop-group
      updates-price:
        topic: product-price-update-event-request
        group-id: product-price-update-event-request-shop-group

  out:
    product:
      update-stock-event:
        topic: product-stock-update-event-response
      update-price-event:
        topic: product-price-update-event-response
