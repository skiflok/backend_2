#version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: pg_backend_2
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: backend2
    ports:
      - "5432:5432"
    volumes:
      - ./src/main/resources/psql_map_folder:/psql_map_folder
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d backend2" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  adminer:
    image: dpage/pgadmin4
    container_name: pg_admin
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s         # Как часто выполнять проверку
      timeout: 10s          # Сколько ждать ответа
      retries: 5            # Сколько раз повторить проверку до признания контейнера unhealthy
      start_period: 10s     # Период ожидания перед началом проверок
    restart: unless-stopped

  backend_primary:
    image: backend:latest
    container_name: backend_primary
    ports:
      - "9999:9999"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_READ_ONLY: false
    restart: unless-stopped

  backend_db_ro-1:
    image: backend:latest
    container_name: backend_db_ro-1
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_READ_ONLY: true
    restart: unless-stopped

  backend_db_ro-2:
    image: backend:latest
    container_name: backend_db_ro-2
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_READ_ONLY: true
    restart: unless-stopped


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/main/resources/static/nginx:/static
    depends_on:
      backend_primary:
        condition: service_started
      adminer:
        condition: service_healthy
    restart: unless-stopped
